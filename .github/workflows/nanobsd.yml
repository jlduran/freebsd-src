name: Build a NanoBSD Image

on:
  workflow_dispatch:
    inputs:
      ARCH:
        description: "Choose the architecture: amd64 or arm64 (default: amd64)"
        type: choice
        options:
          - amd64
          - arm64
        default: amd64
        required: true

jobs:
  nanobsd:
    name: NanoBSD (${{ github.event.inputs.ARCH }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install QEMU
        run: |
          sudo apt-get update --quiet || true
          sudo apt-get -yq --no-install-suggests --no-install-recommends install qemu-system-arm xz-utils

      - name: Create necessary support files
        run: |
          truncate -s 64m varstore.img
          truncate -s 64m efi.img
          dd if=/usr/share/qemu-efi-aarch64/QEMU_EFI.fd of=efi.img conv=notrunc

      - name: Fetch the FreeBSD cloud image
        run: |
          curl -O https://download.freebsd.org/snapshots/VM-IMAGES/15.0-CURRENT/amd64/Latest/FreeBSD-15.0-CURRENT-${{ github.event.inputs.ARCH }}-zfs.qcow2.xz
          unxz FreeBSD-15.0-CURRENT-${{ github.event.inputs.ARCH }}-zfs.qcow2.xz

      - name: Create necessary support files
        run: |
          truncate -s 64m varstore.img
          truncate -s 64m efi.img
          dd if=/usr/share/qemu-efi-aarch64/QEMU_EFI.fd of=efi.img conv=notrunc

      - name: Run QEMU
        run: |
          sudo qemu-system-aarch64 \
            -enable-kvm \
            -m 1024 \
            -cpu host \
            -M virt \
            -nographic \
            -drive if=pflash,format=raw,file=efi.img,readonly=on \
            -drive if=pflash,format=raw,file=varstore.img \
            -drive if=none,file=FreeBSD-15.0-CURRENT-${{ github.event.inputs.ARCH }}-zfs.qcow2,id=hd0 \
            -device virtio-blk-device,drive=hd0 -netdev type=tap,id=net0 \
            -device virtio-net-device,netdev=net0
